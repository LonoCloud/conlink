# Test Topology:
#
#      inside              outside
#
#       r0
#       /|\
#      / | \
#    s1 s2  s3--+----------ZZZ_node
#    /   |   \   \
#   /    |    \   \
#  h1   h2    h3   h4


# This defines container to container links outside of the conlink
# container include links from other containers to the conlink
# container itself.
links:
  - left:  {container: '${NODE_NAME}',     intf: ext-intf,  ip: 10.0.1.1/16}
    right: {container: '${NETWORK_NAME}',  intf: node-intf}

# This defines the network inside the conlink container
mininet-cfg:
  switches:
    - name: s1
    - name: s2
    - name: s3
  hosts:
    - name: r0
      opts: {ip: "192.168.1.1/24"}
    - name: h1
      opts: {ip: "192.168.1.100/24", defaultRoute: "via 192.168.1.1"}
    - name: h2
      opts: {ip: "172.16.0.100/12",  defaultRoute: "via 172.16.0.1"}
    - name: h3
      opts: {ip: "10.0.0.100/8",     defaultRoute: "via 10.0.0.1"}
  containers:
    - name: h4
      opts:
        ip: "10.0.0.104/8"
        defaultRoute: "via 10.0.0.1"
        image: python:3-alpine
  links:
    - left:  s1
      right: r0
      opts:  {intfName2: "r0-eth1", params2: {ip: "192.168.1.1/24"}}
    - left:  s2
      right: r0
      opts:  {intfName2: "r0-eth2", params2: {ip: "172.16.0.1/12"}}
    - left:  s3
      right: r0
      opts:  {intfName2: "r0-eth3", params2: {ip: "10.0.0.1/8"}}
    - left:  h1
      right: s1
    - left:  h2
      right: s2
    - left:  h3
      right: s3
    - left:  h4
      right: s3
  interfaces:
    - name: node-intf
      node: s3
  commands:
    - node: r0
      command: "sysctl net.ipv4.ip_forward=1"
    - node: h1
      command: "python3 -m http.server 81"
    - node: h2
      command: "python3 -m http.server 82"
    - node: h3
      command: "python3 -m http.server 83"
    - node: h4
      command: "python3 -m http.server 84"
